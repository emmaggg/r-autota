{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["tooltip_id","Tooltip","children","text","id","className","data-tip","data-for","effect","common_tips","NotFoundError","matches","this","props","packages","user_defined","variable","missing_obj","length","map","match","pkg","line_number","path","line_text","React","Component","convert_text","s","html","replace","dangerouslySetInnerHTML","__html","ParseInfo","bad_expr","parse_info","coord_map","row","col","i","charAt","parts","last_end","forEach","parse_obj","start","line1","col1","end","line2","col2","push","substring","last_obj","cls_name","token","SyntaxError","syntax","syntax_kind","style","display","FileNotFoundError","missing_path","GenericError","App","errors","kind","message","createElement","query_explain","so_query","so_questions","q","key","href","Boolean","window","location","hostname","url","URL","searchParams","get","JSON","parse","atob","decodeURIComponent","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8397192c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport './App.css';\n\nlet tooltip_id = 0;\nlet Tooltip = ({children, text}) => {\n  tooltip_id += 1;\n  const id = `tooltip${tooltip_id}`;\n  return <span className='tooltip' data-tip data-for={id}>\n    {text}<sup>?</sup>\n    <ReactTooltip effect=\"solid\" id={id}>{children}</ReactTooltip>\n  </span>\n};\n\nlet common_tips = {\n  'syntax': (<Tooltip text=\"syntax\">Syntax means the order and kind of characters in a program. For example, we would say <code>f(a, b)</code> is the \"syntax\" for a function call in R.</Tooltip>),\n  'variable': (<Tooltip text=\"variable\">Variable means a name that stands in for a number, string, function, or other R object. Variables are defined by the <code>x &lt;- 1</code> syntax.</Tooltip>)\n};\n\nclass NotFoundError extends React.Component {\n  render() {\n    const matches = this.props.matches;\n    const packages = this.props.packages;\n    const user_defined = this.props.user_defined;\n    return <div className='error-help'>\n      <div className='explanation block'>\n        <div className='block-header'>Explanation</div>\n        <div>This error means you tried to use a {common_tips.variable} called \"<code>{this.props.missing_obj}</code>\" that R couldn't find.</div>\n      </div>\n      <div className='causes block'>\n        <div className='block-header'>Possible causes</div>\n        <ol className='cause-list'>\n          <li>\n            <div><strong>Did you make a typo writing the name?</strong></div>\n            {matches.length > 0\n              ? <div>\n                <span>I found some similar names in your program that you maybe meant:</span>\n                <ul>{matches.map((match) => <li><code>{match}</code></li>)}</ul>\n              </div>\n              : null\n            }\n          </li>\n          <li>\n            <span><strong>Did you forget to import a package?</strong> &nbsp;</span>\n            {packages.length > 0\n              ? <div>\n                <span>I found the name you're looking for in the following packages that are installed but not imported:</span>\n                <ul>{packages.map((pkg) => <li><code>{pkg}</code></li>)}</ul>\n              </div>\n              : null\n            }\n          </li>\n          <li>\n            <span><strong>Did you forget to execute part of your script?</strong></span>\n            {user_defined\n              ? <div>\n                <div>I found that line {user_defined.line_number} of file <code>{user_defined.path}</code> defines the name you're trying to use. Did you forget to run this line?</div>\n                <pre>{user_defined.line_text}</pre>\n              </div>\n              : null}\n          </li>\n        </ol>\n      </div>\n    </div>;\n  }\n}\n\nlet convert_text = (s) => {\n  const html = s.replace(/ /g, '&nbsp;').replace(/\\n/g, '<br />');\n  return <span dangerouslySetInnerHTML={{__html: html}} />;\n};\n\nlet ParseInfo = ({bad_expr, parse_info}) => {\n  bad_expr = bad_expr[0];\n  let coord_map = {};\n  let row = 0;\n  let col = 0;\n  for (let i = 0; i < bad_expr.length; ++i) {\n    if (bad_expr.charAt(i) === '\\n') {\n      row += 1;\n      col = 0;\n    } else {\n      if (!coord_map[row]) { coord_map[row] = {}; }\n      coord_map[row][col] = i;\n      col += 1;\n    }\n  }\n\n  let parts = [];\n  let last_end = 0;\n  parse_info.forEach((parse_obj, i) => {\n    let start = coord_map[parse_obj.line1-1][parse_obj.col1-1];\n    let end = coord_map[parse_obj.line2-1][parse_obj.col2-1]+1;\n    parts.push(<span>{convert_text(bad_expr.substring(last_end, start))}</span>);\n    const last_obj = i === parse_info.length - 1;\n    const cls_name = `token stx-${parse_obj.token} ${last_obj ? \"last-token\" : \"\"}`;\n    parts.push(<span className={cls_name}>\n      {convert_text(bad_expr.substring(start, end))}</span>);\n    last_end = end;\n  });\n\n  return <div className='parse-info'>{parts}</div>;\n};\n\nclass SyntaxError extends React.Component {\n  render() {\n    return <div className='error-help'>\n      <div className='explanation block'>\n        <div className='block-header'>Explanation</div>\n        <div>This error means that R couldn't understand the {common_tips.syntax} of your program. While reading left-to-right through your program, R found a \"<code>{this.props.syntax_kind}</code>\" that R wasn't expecting. The unexpected <code>{this.props.syntax_kind}</code> is highlighted in red below.</div>\n        {this.props.parse_info != null\n          ? <ParseInfo {...this.props} />\n          : null}\n      </div>\n      <div className='causes block'>\n        <div className='block-header'>Possible causes</div>\n        <ol className='cause-list'>\n          <li>\n            <div><strong>Did you forget a comma or other symbol?</strong></div>\n            <div>For example, if you wanted to write <code>f(1, 2)</code> and instead wrote <code>f(1 2)</code>, R would say \"unexpected numeric constant\" because R found a 2 when it was expecting a comma.</div>\n          </li>\n          <li>\n            <div><strong>Are your parentheses, quotes, and brackets balanced?</strong></div>\n            <div>Every <code>(</code> needs a matching <code>)</code>, similarly for <code>\"\"</code> and <code>[]</code>. For example, if you wanted to write <code>f(1)</code> and instead wrote <span style={{display:\"none\"}}>(</span>(<code>f(1))</code>, then R would say \"unexpected ')'\" because R didn&quot;t find a preceding \"(\" to match it.</div>\n          </li>\n        </ol>\n      </div>\n    </div>;\n  }\n}\n\nlet FileNotFoundError = (props) => {\n  return <div className='error-help'>\n    <div className='explanation block'>\n      <div className='block-header'>Explanation</div>\n      <div>\n        You probably tried to open a file, and the file path you gave is incorrect. I think the path you provided was \"<code>{props.missing_path[0]}</code>\".\n       {props.matches.length > 0 ?\n        <div>I found a few similarly named files. Maybe you meant:\n          <ul>\n            {props.matches.map((match) =>\n      \t      <li><code>{match}</code></li>\n            )}\n          </ul>\n        </div>\n         : null}\n      </div>\n    </div>\n  </div>;\n};\n\nlet GenericError = (props) => {\n  return <div className='error-help'>\n    <div className='explanation block'>\n      <div className='block-header'>Explanation</div>\n      <div>I haven't been trained to understand this kind of error, sorry. You can at at least check out the StackOverflow links below.</div>\n    </div>\n  </div>;\n};\n\nclass App extends React.Component {\n  errors = {\n    'obj_not_found': NotFoundError,\n    'no_function': NotFoundError,\n    'missing_path': FileNotFoundError,\n    'syntax_error': SyntaxError\n  }\n\n  render() {\n    return <div className='App'>\n      <h1>Auto TA</h1>\n      {this.props.kind\n        ? <div>\n          <div className='error-message block'>\n            <div className='block-header'>Error message</div>\n            <pre className='code-error'>{this.props.message}</pre>\n          </div>\n          {React.createElement(\n            this.props.kind in this.errors\n              ? this.errors[this.props.kind]\n              : GenericError,\n            this.props)}\n          <div className='block'>\n            <div className='block-header'>StackOverflow questions</div>\n            {this.props.query_explain\n              ? <div>\n                For this error, I searched StackOverflow for this query:\n                <pre>{this.props.so_query}</pre>\n                <div>Why did I write the query this way? {this.props.query_explain}</div>\n              </div>\n              : <div>I searched the exact error on StackOverflow and the results below.</div>}\n            {this.props.so_questions.length > 1\n              ? <ol>\n                {this.props.so_questions.map((q, i) =>\n                  <li key={i}><a href={q[1]}>{q[0]}</a></li>\n                )}\n              </ol>\n              : <i><br />No results found</i>}\n          </div>\n        </div>\n        : <div>No error yet</div>\n      }\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst url = window.location.href;\nlet props = new URL(url).searchParams.get('q');\nif (props != null) {\n  props = JSON.parse(atob(decodeURIComponent(props)));\n} else {\n  props = {};\n}\n\nReactDOM.render(<App {...props} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}